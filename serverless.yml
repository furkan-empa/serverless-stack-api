# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Name of the SST app that's deploying our infrastructure
  sstApp: ${self:custom.stage}-notes-infra


provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: eu-central-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    tableName: notes
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
      - !ImportValue '${self:custom.sstApp}-TableArn'

functions:
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          authorizer: aws_iam
  get:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /notes/{id}
    # - method: GET request
    handler: get.main
    events:
      - http:
        path: notes/{id}
        method: get
        authorizer: aws_iam
  list:
    # Defines an HTTP API endpoint that calls the main function in list.js # - path: url path is /notes
    # - method: GET request
    handler: list.main
    events:
    - http:
        path: notes
        method: get
        authorizer: aws_iam
  update:
    handler: update.main
    events:
    - http:
        path: notes/{id}
        method: put
        authorizer: aws_iam
  delete:
    handler: delete.main
    events:
    - http:
        path: notes/{id}
        method: delete
        authorizer: aws_iam